"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5511],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},75143:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],l={sidebar_position:1,id:"offscreen",title:"Offscreen"},s=void 0,c={unversionedId:"api/Components/offscreen",id:"api/Components/offscreen",title:"Offscreen",description:"Wrapping components that need to be stationary with ``",source:"@site/docs/api/Components/Offscreen.md",sourceDirName:"api/Components",slug:"/api/Components/offscreen",permalink:"/react-stillness-component/docs/api/Components/offscreen",editUrl:"https://github.com/leomYili/react-stillness-component/tree/main/docs/docs/api/Components/Offscreen.md",tags:[],version:"current",lastUpdatedBy:"leomYili",lastUpdatedAt:1664004227,formattedLastUpdatedAt:"9/24/2022",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"offscreen",title:"Offscreen"},sidebar:"docs",previous:{title:"StillnessProvider",permalink:"/react-stillness-component/docs/api/Components/stillnessProvider"},next:{title:"connectStillness",permalink:"/react-stillness-component/docs/api/Decorators/connectStillness"}},p={},u=[{value:"usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],f={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Wrapping components that need to be stationary with ",(0,i.kt)("inlineCode",{parentName:"p"},"<Offscreen>"))),(0,i.kt)("h2",{id:"usage"},"usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Offscreen } from 'react-stillness-component';\n\nfunction App() {\n  const [show, setShow] = useState(true);\n\n  return (\n    <div>\n      <button onClick={() => setShow((show) => !show)}>Toggle</button>\n      // highlight-start\n      <Offscreen visible={show}>\n        <Count />\n      </Offscreen>\n      // highlight-end\n    </div>\n  );\n}\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"visible"),": Required, ",(0,i.kt)("strong",{parentName:"li"},"boolean"),", used to manually control whether the component is quiescent or not, will start quiescent component only when ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", if initialized with ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),", it will automatically turn on ",(0,i.kt)("strong",{parentName:"li"},"lazy loading")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type"),": optional, ",(0,i.kt)("strong",{parentName:"li"},"string")," or ",(0,i.kt)("strong",{parentName:"li"},"number"),", help you categorize the type of static components, easy to manage and control manually"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scrollReset"),": optional, ",(0,i.kt)("strong",{parentName:"li"},"boolean"),", by default, scroll position will be saved automatically, if you don't need this feature, please set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),".")))}m.isMDXComponent=!0}}]);