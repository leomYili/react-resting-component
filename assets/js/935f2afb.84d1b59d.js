"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Intro","href":"/react-stillness-component/docs/intro","docId":"intro"},{"type":"link","label":"Get-started","href":"/react-stillness-component/docs/get-started","docId":"get-started"},{"type":"category","label":"Basic Concepts","collapsed":true,"items":[{"type":"link","label":"Items and Types","href":"/react-stillness-component/docs/basic-concepts/items-types","docId":"basic-concepts/items-types"},{"type":"link","label":"Contract","href":"/react-stillness-component/docs/basic-concepts/contract","docId":"basic-concepts/contract"}],"collapsible":true,"href":"/react-stillness-component/docs/category/basic-concepts"},{"type":"category","label":"API","collapsed":true,"items":[{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"StillnessProvider","href":"/react-stillness-component/docs/api/Components/stillnessProvider","docId":"api/Components/stillnessProvider"},{"type":"link","label":"Offscreen","href":"/react-stillness-component/docs/api/Components/offscreen","docId":"api/Components/offscreen"}]},{"type":"category","label":"Decorators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"connectStillness","href":"/react-stillness-component/docs/api/Decorators/connectStillness","docId":"api/Decorators/connectStillness"}]},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useStillnessManager","href":"/react-stillness-component/docs/api/Hooks/useStillnessManager","docId":"api/Hooks/useStillnessManager"},{"type":"link","label":"useStillness","href":"/react-stillness-component/docs/api/Hooks/useStillness","docId":"api/Hooks/useStillness"}]},{"type":"link","label":"Contract State","href":"/react-stillness-component/docs/api/contract-state","docId":"api/contract-state"},{"type":"link","label":"global","href":"/react-stillness-component/docs/api/global","docId":"api/global"}],"collapsible":true,"href":"/react-stillness-component/docs/category/api"}],"examples":[{"type":"link","label":"Overview","href":"/react-stillness-component/docs/examples/","docId":"examples/index"},{"type":"category","label":"simple","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"simple","href":"/react-stillness-component/docs/examples/simple/intro","docId":"examples/simple/intro"}]},{"type":"category","label":"react-router","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"v5","href":"/react-stillness-component/docs/examples/react-router/v5","docId":"examples/react-router/v5"},{"type":"link","label":"v6","href":"/react-stillness-component/docs/examples/react-router/v6","docId":"examples/react-router/v6"}]},{"type":"category","label":"umi","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"v3","href":"/react-stillness-component/docs/examples/umi/v3","docId":"examples/umi/v3"}]}]},"docs":{"api/Components/offscreen":{"id":"api/Components/offscreen","title":"Offscreen","description":"Wrapping components that need to be stationary with ``","sidebar":"docs"},"api/Components/stillnessProvider":{"id":"api/Components/stillnessProvider","title":"StillnessProvider","description":"The StillnessProvider is the core of the stillness component and needs to be placed outside of all `` components.","sidebar":"docs"},"api/contract-state":{"id":"api/contract-state","title":"Contract State","description":"Contract State is the argument returned to the collect function, which will provide various information about a particular stillness-component (typically the `` of the most recent hierarchy).","sidebar":"docs"},"api/Decorators/connectStillness":{"id":"api/Decorators/connectStillness","title":"connectStillness","description":"The connectStillness function connects a React component to a stillness-component control center. It provides the connected component with the data it gets from the control center and the functions it can use to manipulate the stillness, it does not modify the component passed to it, instead, it returns a new connected component.","sidebar":"docs"},"api/global":{"id":"api/global","title":"global","description":"The component now exposes the global property - INSTANCE_SYM which is mounted on the current global variable (e.g. window)","sidebar":"docs"},"api/Hooks/useStillness":{"id":"api/Hooks/useStillness","title":"useStillness","description":"useStillness connects the React component to the stillness-component control center, which provides the connected component with data from the control center and the functions it can use to manipulate the still, and you can declare the properties and methods you want","sidebar":"docs"},"api/Hooks/useStillnessManager":{"id":"api/Hooks/useStillnessManager","title":"useStillnessManager","description":"useStillnessManager provides access to control the stillness system, and the returned instance object contains access to all stillness states, contracts, etc.","sidebar":"docs"},"basic-concepts/contract":{"id":"basic-concepts/contract","title":"Contract","description":"contract means a public convention for changes to a stillness-component that will provide various information about the particular stillness-component. It responds to stillness state changes by updating the props of the wrapper component.","sidebar":"docs"},"basic-concepts/items-types":{"id":"basic-concepts/items-types","title":"Items and Types","description":"The use of Items and Types is often necessary when listening to the various states of a stillness-component.","sidebar":"docs"},"examples/index":{"id":"examples/index","title":"Overview","description":"about","sidebar":"examples"},"examples/react-router/v5":{"id":"examples/react-router/v5","title":"v5","description":"React-router Route","sidebar":"examples"},"examples/react-router/v6":{"id":"examples/react-router/v6","title":"v6","description":"In the react-route v6 example, we use the useOutlet api to customize the processing return and force caching of all routes corresponding to the outlet, thus achieving the stillness effect","sidebar":"examples"},"examples/simple/intro":{"id":"examples/simple/intro","title":"simple","description":"The example on the home page is actually the most basic usage, of course, here to add a link to debug","sidebar":"examples"},"examples/umi/v3":{"id":"examples/umi/v3","title":"v3","description":"This example shows how to apply stillness-component in umi3.x, by rewriting the underlying rendering plugin, to transform switch to achieve a consistent effect","sidebar":"examples"},"get-started":{"id":"get-started","title":"Get-started","description":"React-stillness-component is a npm packages.","sidebar":"docs"},"intro":{"id":"intro","title":"Intro","description":"This is a component that implements a feature similar to that provided in vue (keep-alive). The expectation is that the component will be stillness (not frozen, just kept live)","sidebar":"docs"}}}')}}]);